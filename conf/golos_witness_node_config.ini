
# Plugin(s) to enable, may be specified multiple times
plugin = chain p2p json_rpc webserver account_by_key account_history auth_util block_info database_api follow market_history network_broadcast_api operation_history private_message raw_block social_network statsd tags witness witness_api

# Defines a range of accounts to track as a json pair ["from","to"] [from,to]. Can be specified multiple times
# track-account-range = 

# Defines a individual account to track (in addition to ranges). Can be specified multiple times
# track-account = 

# the location of the chain shared memory files (absolute path or relative to application data dir)
shared-file-dir = "blockchain"

# Start size of the shared memory file. Default: 2G
shared-file-size = 2G

# Increasing size on reaching limit of free space in shared memory file (see min-free-shared-file-size). Default: 2G
inc-shared-file-size = 2G

# Minimum free space in shared memory file (see inc-shared-file-size). Default: 500M
min-free-shared-file-size = 500M

# Check free space in shared memory each N blocks. Default: 1000 (each 3000 seconds).
block-num-check-free-size = 1000

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# flush shared memory changes to disk every N blocks
# flush-state-interval = 

# maximum microseconds for trying to get read lock
# read-wait-micro = 500000

# maximum number of retries to get read lock
max-read-wait-retries = 2

# maximum microseconds for trying to get write lock
# write-wait-micro = 500000

# maximum number of retries to get write lock
max-write-wait-retries = 3

# push blocks and transactions from one thread
single-write-thread = 1

# remove votes before defined block, should speedup initial synchronization
clear-votes-before-block = 4294967295

# if set, remove votes older than specified number of blocks. -1 = do not remove; 0 = remove after cashout; any other value N - remove votes older than N blocks. note: votes don't removed before post cashout
clear-votes-older-n-blocks = 4294967295

# virtual operations will not be passed to the plugins, helps to save some memory
skip-virtual-ops = false

# enable calling of plugins for operations on push_transaction
enable-plugins-on-push-transaction = false

# replay all blocks if shared memory is corrupted
replay-if-corrupted = true

# store account metadata for all accounts if true, for no one if else, otherwise for specified in store-account-metadata-list
# store-account-metadata = 

# names of accounts to store metadata
# store-account-metadata-list = 

# store memo for all savings withdraws
store-memo-in-savings-withdraws = 1

# Set the maximum size of cached feed for an account
follow-max-feed-size = 500

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
market-history-bucket-size = [15,60,300,3600,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 5760)
market-history-buckets-per-size = 5760

# The local IP address and port to listen for incoming connections.
# p2p-endpoint = 

# Maxmimum number of incoming connections on P2P endpoint.
# p2p-max-connections = 

# The IP address and port of a remote peer to sync with. Deprecated in favor of p2p-seed-node.
# seed-node = 

# The IP address and port of a remote peer to sync with.
# p2p-seed-node = 

# Defines a range of accounts to private messages to/from as a json pair ["from","to"] [from,to]
# pm-account-range = 

# Defines a list of accounts to private messages to/from
# pm-account-list = 

# If set, remove comment titles older than specified number of blocks
# comment-title-depth = 

# If set, remove comment bodies older than specified number of blocks.
# comment-body-depth = 

# If set, remove comment json-metadatas older than specified number of blocks.
# comment-json-metadata-depth = 

# should content's depth be set to null after update
set-content-storing-depth-null-after-update = 0

# mode of storing records of comment.active and comment.last_update: 4294967295 = store all, 0 = do not store, N = storing N blocks depth
comment-last-update-depth = 4294967295

# store comment rewards
store-comment-rewards = 1

# StatsD endpoints that will receive the statistics in StatsD string format.
# statsd-endpoints = 

# Default port for StatsD nodes.
statsd-default-port = 8125

# Maximum number of tags
tags-number = 5

# Maximum length of tag
tag-max-length = 512

# Local http endpoint for webserver requests.
# webserver-http-endpoint = 

# Local websocket endpoint for webserver requests.
# webserver-ws-endpoint = 

# Local http and websocket endpoint for webserver requests. Deprectaed in favor of webserver-http-endpoint and webserver-ws-endpoint
# rpc-endpoint = 

# Number of threads used to handle queries. Default: 256.
webserver-thread-pool-size = 1

# Enable block production, even if the chain is stale.
enable-stale-production = true

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = 0

# name of witness controlled by this node (e.g. initwitness )
# witness = 

# name of miner and its private key (e.g. ["account","WIF PRIVATE KEY"] )
# miner = 

# Number of threads to use for proof of work mining
# mining-threads = 

# WIF PRIVATE KEY to be used by one or more witnesses or miners
# private-key = 

# Account creation fee to be voted on upon successful POW - Minimum fee is 100.000 STEEM (written as 100000)
# miner-account-creation-fee = 

# Maximum block size (in bytes) to be voted on upon successful POW - Max block size must be between 128 KB and 750 MB
# miner-maximum-block-size = 

# SBD interest rate to be vote on upon successful POW - Default interest rate is 10% (written as 1000)
# miner-sbd-interest-rate = 

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]
# console appender stream
stream = std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
# filename can be absolute or relative to this config file
filename = logs/p2p/p2p.log

# route any messages logged to the default logger to the "stderr" logger we declared above, if they are info level are higher
[logger.default]
# log level of "default" logger (all|debug|info|warn|error|off)
level = info
# appender(s) of "default" logger
appenders = stderr

# route messages sent to the "p2p" logger to the p2p appender declared above
[logger.p2p]
# log level of "p2p" logger (all|debug|info|warn|error|off)
level = info
# appender(s) of "p2p" logger
appenders = p2p
